/*******************************************************************************
 * SHADOWS
 * Path: lib/base/_shadows.scss
 ******************************************************************************/

/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow

@mixin shadow($depth, $color: black) {
    @if $depth < 1 {
        box-shadow: none;
    } @else if $depth > 5 {
        @warn 'Invalid $depth `#{$depth}` for mixin `shadow`.';
    } @else {
        box-shadow: bottom-shadow($depth, $color), top-shadow($depth, $color);
    }
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}

@function top-shadow($depth, $color) {
    $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
    $blur: nth(1.5 3 10 14 19, $depth) * 4px;
    $color-shadow: rgba($color, nth(0.12 0.16 0.19 0.25 0.3, $depth));

    @return 0 $primary-offset $blur $color-shadow;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}

@function bottom-shadow($depth, $color) {
    $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
    $blur: nth(1 3 3 5 6, $depth) * 4px;
    $color-shadow: rgba($color, nth(0.24 0.23 0.23 0.22 0.22, $depth));

    @return 0 $primary-offset $blur $color-shadow;
}

// Helper classes

@if $generate_classes and $generate-shadow-classes {

    .shadow-0 {
        @include shadow(0);
    }
    .shadow-1 {
        @include shadow(1);
    }
    .shadow-2 {
        @include shadow(2);
    }
    .shadow-3 {
        @include shadow(3);
    }
    .shadow-4 {
        @include shadow(4);
    }
    .shadow-5 {
        @include shadow(5);
    }
}
